{"version":3,"sources":["components/Header.js","components/CountryItem.js","components/Search.js","components/CountryList.js","components/CurrencyCoverter.js","components/CountryDetails.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","name","react_default","a","createElement","Fragment","className","react_router_dom","to","divStyle","width","textAlign","imgStyle","CountryItem","item","concat","numericCode","style","src","flag","alt","capital","Search","change","type","placeholder","onChange","CountryList","state","search","handleChange","e","_this","setState","target","value","this","filteredCountries","props","country","filter","toLowerCase","indexOf","components_Search","map","i","components_CountryItem","key","Component","API_KEY","process","CurrencyCoverter","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectHandler","fromCurrency","toCurrency","convertHandler","axios","get","then","response","result","amount","data","rates","toFixed","catch","error","console","log","message","code","currencies","_this2","currencyAr","push","err","_this3","event","onClick","symbol","CountryDetails","population","CurrencyCoverter_CurrencyCoverter","App","fetch","json","components_Header","react_router","exact","path","render","CountryList_CountryList","match","components_CountryDetails","find","params","detailId","Boolean","window","location","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8810e08a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = ({name}) => (\n    <React.Fragment>\n        <nav className=\" navbar navbar-dark bg-info\">\n            <div className=\"container\">\n            <Link to=\"/\">\n                 <h1 className=\"navbar-brand\">{name}</h1>\n            </Link>\n            </div>\n        </nav>\n    </React.Fragment>\n\t\n);\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst divStyle = {\n    width: '15rem',\n    textAlign: 'center'\n}\n\nconst imgStyle = {\n    width: '5rem'\n\n}\n\nconst CountryItem = ({item}) => (\n\n\t<React.Fragment>\n            \n\t\t\t<li className=\"mr-3 ml-3 mt-5\">\n                  <Link to={`details/${item.numericCode}`}>\n                <div className=\"card\" style={divStyle}>\n                <img src={item.flag} className=\"pt-4 mx-auto card-img-top\" alt={item.flag} style={imgStyle} />\n                <div className=\"card-body\">\n                    <h5  className=\"card-title\">{item.name}</h5>\n                    <p className=\"card-text\">{item.capital}</p>\n                </div>\n                </div>\n                 </Link>\n\t\t\t</li>  \n\t</React.Fragment>\n);\nexport default CountryItem;\n","import React from 'react';\n\nconst Search = ({change}) => (\n    <React.Fragment>\n        <div className=\"text-center mt-5\">\n            <h1 className=\"\">Search Country</h1>\n            <input className=\"form-control\" type='text' placeholder=\"e.g Sweden\" onChange={change} />\n        </div>\n    </React.Fragment>\n\t\n);\n\nexport default Search;\n","import React, { Component } from 'react';\nimport CountryItem from './CountryItem';\nimport Search from './Search';\n\nexport default class CountryList extends Component {\n    state = {\n        search: ''\n    }\n\n    handleChange = e => {\n        this.setState({ search : e.target.value});\n    }\n\t\n\trender() {\n\n        const {search} = this.state;\n        const filteredCountries = this.props.country.filter( country => {\n            return country.name.toLowerCase().indexOf( search.toLowerCase()) !== -1\n        })\n\n\t\treturn (\n\t\t\t<React.Fragment>\n                <Search change={this.handleChange}/>\n\t\t\t\t<div className=\"my-3 p-3 bg-white\">\n\n\t\t\t\t\t<ul className=\"list-unstyled row\">{filteredCountries.map((item, i) => <CountryItem key={i} item={item} />)}</ul>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst API_KEY = process.env.REACT_APP_FIXER_API_KEY;\n\nexport default class CurrencyCoverter extends Component {\n\n    constructor(props) {\n    super(props);\n    this.state = {\n      result: null,\n      fromCurrency: \"EUR\",\n      toCurrency: props.code,\n      amount: 1,\n      currencies: []\n    };\n  }\n\n  selectHandler = e => {\n    if (e.target.name === \"from\") {\n      this.setState({ fromCurrency: e.target.value });\n    } else {\n      if (e.target.name === \"to\") {\n        this.setState({ toCurrency: e.target.value });\n      }\n    }\n  };\n\n  \n\n  convertHandler = () => {\n    if (this.state.fromCurrency !== this.state.toCurrency) {\n      axios\n        .get(\n          `http://data.fixer.io/api/latest?access_key=${API_KEY}&base=${\n            this.state.fromCurrency\n          }&symbols=${this.state.toCurrency}`\n        )\n        .then(response => {\n          const result =\n            this.state.amount * response.data.rates[this.state.toCurrency];\n          this.setState({ result: result.toFixed(5) });\n        })\n        .catch(error => {\n          console.log(\"Opps\", error.message);\n        });\n    } else {\n      this.setState({ result: \"You cant convert the same currency!\" });\n    }\n  };\n\n  componentDidMount() {\n    axios\n      .get(`http://data.fixer.io/api/latest?access_key=${API_KEY}`)\n      .then(response => {\n        const currencyAr = [\"EUR\"];\n        for (const key in response.data.rates) {\n          currencyAr.push(key);\n        }\n        this.setState({ currencies: currencyAr });\n      })\n      .catch(err => {\n        console.log(\"oppps\", err);\n      });\n  }\n\n    render() {\n        \n\n        return (\n            <React.Fragment>\n            <div>\n               \n                <div className=\"From\">\n          <input\n            name=\"amount\"\n            type=\"text\"\n            value={this.state.amount}\n            onChange={event => this.setState({ amount: event.target.value })}\n          />\n         \n           <p>{this.state.fromCurrency}</p>\n         \n           <p>{this.state.toCurrency}</p>\n          <button onClick={this.convertHandler}>Convert</button>\n          {this.state.result && <h3><span>{this.props.symbol} </span>{this.state.result}</h3>}\n        </div>\n            </div>\n        </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\nimport CurrencyCoverter from './CurrencyCoverter';\n\nconst divStyle = {\n    width: '15rem',\n}\n\nconst CountryDetails = ({name, capital, population, flag, currencies}) => {\n\n    if(!currencies){\n        return (<span>Loading...</span>)\n    }\n   \n    return (\n         <React.Fragment>\n        <div className=\"mt-5\">\n           <div className=\"row\">\n                 \n               <div className=\"col-md-8\">\n                   <div className=\"my-3 p-3 bg-white rounded shadow-sm\">\n                      \n                       <div>\n                           <img src={flag} alt={flag} style={divStyle}/>\n                            \n                           <h2>{name}</h2>\n                           <h4>{capital}</h4>\n                           <p>{population}</p>\n                           <p>{currencies[0].name}</p>\n                         \n                \n                       </div>\n                   </div>\n               </div>\n\n                <div className=\"col-md-4\">\n                      <div className=\"my-3 p-3 bg-white rounded shadow-sm\">\n                            <h3>Convert EUR to {name}</h3>\n                           <CurrencyCoverter code={currencies[0].code} symbol={currencies[0].symbol} />\n                          </div> \n                </div>\n\n             \n           </div>\n        </div>\n    </React.Fragment>\n    )\n}\n\nexport default CountryDetails\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport CountryList from './components/CountryList';\nimport CountryDetails from './components/CountryDetails';\n// import axios from 'axios';\n\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      country: []\n    };\n  }\n\n  componentDidMount(){\n    const url = 'https://restcountries.eu/rest/v2/all';\n\n    fetch(url)\n\t\t\t.then(response => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcountry: data\n\t\t\t\t});\n\t\t\t})\n      .catch(error => console.log(error));\n      \n  }\n\n  render() {\n    const {country} = this.state;\n\n    return (\n      <React.Fragment>\n        <BrowserRouter>\n        <Header name=\"AnySearch\" />\n        <div className=\"container\">\n        <Switch>\n          <Route exact path='/' render={props => <CountryList country={country} />}/>\n          <Route path='/details/:detailId' render={({match}) => <CountryDetails {...country.find(item => item.numericCode === match.params.detailId)} />} />\n        </Switch>\n        </div>\n        </BrowserRouter>\n        \n    </React.Fragment>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}